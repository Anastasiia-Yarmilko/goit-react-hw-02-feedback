{"version":3,"sources":["components/FeedbackOptions/feedbackOptions.js","components/Section/section.js","components/Feedback/feedback.js","components/Notification/notification.js","components/Statistics/statistics.js","App.js","reportWebVitals.js","index.js"],"names":["FeedbackOptions","onLeaveFeedback","name","onClick","Section","title","children","className","Feedback","this","props","handleFeedback","Component","Notification","message","Statistics","countTotalFeedback","state","good","bad","neutral","countPositiveFeedbackPercentage","Math","round","totalFeedbacks","App","event","currentTarget","Object","keys","filter","key","length","setState","prevState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mSAAe,SAASA,EAAT,GAA8C,IAAnBC,EAAkB,EAAlBA,gBAElC,OACI,gCACI,wBAAQC,KAAK,OAAOC,QAASF,EAA7B,kBACA,wBAAQC,KAAK,UAAUC,QAASF,EAAhC,qBACA,wBAAQC,KAAK,MAAMC,QAASF,EAA5B,oBCND,SAASG,EAAT,GAA8D,IAAD,IAA3CC,aAA2C,MAArC,cAAqC,EAAtBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,UAC5D,OACI,gCACI,6BACKF,IAEL,yBAASE,UAAWA,EAApB,SACKD,O,ICSFE,E,4JAXb,WACE,OACE,8BACE,cAACJ,EAAD,CAASC,MAAM,wBAAwBE,UAAU,WAAjD,SACE,cAACP,EAAD,CAAiBC,gBAAiBQ,KAAKC,MAAMC,yB,GALhCC,aCJR,SAASC,EAAT,GAAuC,IAAD,IAAdC,eAAc,MAAN,GAAM,EACjD,OACI,kCAAKA,EAAL,O,ICuCOC,E,4MApCbC,mBAAqB,WAEnB,OADY,GAEV,EAAKN,MAAMO,MAAMC,KAAO,EAAKR,MAAMO,MAAME,IAAM,EAAKT,MAAMO,MAAMG,U,EAGpEC,gCAAkC,WAChC,OACEC,KAAKC,MAAO,EAAKb,MAAMO,MAAMC,KAAO,EAAKF,qBAAwB,MAAQ,G,4CAI7E,WACE,MAA+BP,KAAKC,MAAMO,MAAlCG,EAAR,EAAQA,QAASD,EAAjB,EAAiBA,IAAKD,EAAtB,EAAsBA,KAChBM,EAAiBf,KAAKO,qBAE5B,OAAuB,IAAnBQ,EAEI,cAACpB,EAAD,CAASC,MAAM,aAAaE,UAAU,aAAtC,SACI,cAACM,EAAD,CAAcC,QAAQ,wBAK9B,eAACV,EAAD,CAASC,MAAM,aAAaE,UAAU,aAAtC,UACE,yCAAYW,KACZ,4CAAeE,KACf,wCAAWD,KACX,0CAAaK,KACb,sDAAyBf,KAAKY,kCAA9B,gB,GA9BeT,aCCJa,E,4MACnBR,MAAQ,CACNC,KAAM,EACNE,QAAS,EACTD,IAAK,G,EAGPR,eAAiB,SAAAe,GACf,IAAQxB,EAASwB,EAAMC,cAAfzB,KAEmB0B,OAAOC,KAAK,EAAKZ,OAAOa,QACjD,SAAAC,GAAG,OAAI7B,IAAS6B,KAEMC,QAExB,EAAKC,UAAS,SAAAC,GACZ,OAAO,2BACFA,GADL,kBAEGhC,EAAOgC,EAAUhC,GAAQ,Q,4CAKhC,WACE,OACE,gCACE,cAAC,EAAD,CACEe,MAAOR,KAAKQ,MACZN,eAAgBF,KAAKE,eACrBT,KAAK,SAEP,cAAC,EAAD,CAAYe,MAAOR,KAAKQ,e,GA/BCL,aCOlBuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.c4a9ee8b.chunk.js","sourcesContent":["export default function FeedbackOptions ({onLeaveFeedback}) {\n\n        return(\n            <div>\n                <button name=\"good\" onClick={onLeaveFeedback}>Good</button> \n                <button name=\"neutral\" onClick={onLeaveFeedback}>Neutral</button>\n                <button name=\"bad\" onClick={onLeaveFeedback}>Bad</button>\n            </div>\n        )\n\n}","export default function Section({title=\"Empty title\", children, className}) {\n    return (\n        <div>\n            <h2>\n                {title}\n            </h2>\n            <section className={className}>\n                {children}\n            </section>\n        </div>\n        \n    )\n}","import { Component } from 'react';\nimport FeedbackOptions from '../FeedbackOptions/feedbackOptions.js';\nimport Section from '../Section/section.js';\n\nclass Feedback extends Component {\n  render() {\n    return (\n      <div>\n        <Section title=\"Please leave feedback\" className=\"feedback\">\n          <FeedbackOptions onLeaveFeedback={this.props.handleFeedback} />\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default Feedback;\n","export default function Notification({ message=\"\" }) {\n    return(\n        <p> {message} </p>\n    )\n}","import { Component } from 'react';\nimport Section from '../Section/section.js';\nimport Notification from '../Notification/notification.js';\n\nclass Statistics extends Component {\n  countTotalFeedback = () => {\n    let total = 0;\n    return (total +=\n      this.props.state.good + this.props.state.bad + this.props.state.neutral);\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return (\n      Math.round((this.props.state.good / this.countTotalFeedback()) * 100) || 0\n    );\n  };\n\n  render() {\n    const { neutral, bad, good } = this.props.state;\n    const totalFeedbacks = this.countTotalFeedback();\n\n    if (totalFeedbacks === 0) {\n        return (\n            <Section title=\"Statistics\" className=\"statistics\">\n                <Notification message=\"No feedback given\" />\n            </Section>\n        )\n    } else {\n      return (\n        <Section title=\"Statistics\" className=\"statistics\">\n          <div>Good: {good}</div>\n          <div>Neutral: {neutral}</div>\n          <div>Bad: {bad}</div>\n          <div>Total: {totalFeedbacks}</div>\n          <div>Positive feedback: {this.countPositiveFeedbackPercentage()} % </div> \n        </Section>\n      );\n    }\n  }\n}\n\nexport default Statistics;","import './App.css';\nimport { Component } from 'react';\nimport Feedback from './components/Feedback/feedback.js';\nimport Statistics from './components/Statistics/statistics.js';\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleFeedback = event => {\n    const { name } = event.currentTarget;\n\n    const validFeedbackTypes = Object.keys(this.state).filter(\n      key => name === key,\n    );\n    if (!validFeedbackTypes.length) return;\n\n    this.setState(prevState => {\n      return {\n        ...prevState,\n        [name]: prevState[name] + 1,\n      };\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <Feedback\n          state={this.state}\n          handleFeedback={this.handleFeedback}\n          name=\"name\"\n        />\n        <Statistics state={this.state} />\n      </div>\n    );\n  }\n} ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}